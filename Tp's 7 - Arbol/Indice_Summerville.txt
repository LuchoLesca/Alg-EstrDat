
1. Introducción 3
1.1. Preguntas frecuentes sobre la ingeniería del software 5
1.1.1. ¿Qué es software? 5
1.1.2. ¿Qué es la ingeniería del software? 6
1.1.3. ¿Cuál es la diferencia entre ingeniería del software y ciencia de la computación? 7
1.1.4. ¿Cuál es la diferencia entre ingeniería del software e ingeniería de sistemas? . 7
1.1.5. ¿Qué es un proceso del software? 7
1.1.6. ¿Qué es un modelo de procesos del software? 8
1.1.7. ¿Cuáles son los costos de la ingeniería del software? 9
1.1.8. ¿Qué son los métodos de la ingeniería del software? 10
1.1.9. ¿Qué es CASE? 11
1.1.10. ¿Cuáles son los atributos de un buen software? 11
1.1.11. ¿Cuáles son los retos fundamentales que afronta la ingeniería del software? 12
1.2. Responsabilidad profesional y ética 12

2. Sistemas socio-técnico s 19
2.1. Propiedades emergentes de los sistemas 21
2.2. Ingeniería de sistemas 23
2.2.1. Definición de requerimientos del sistema 24
2.2.2. Diseño del sistema 26
2.2.3. Modelado de sistemas 28
2.2.4. Desarrollo de los subsistemas 29
2.2.5. Integración del sistema 30
2.2.6. Evolución del sistema 30
2.2.7. Desmantelamiento del sistema 31
2.3. Organizaciones, personas y sistemas informáticos 31
2.3.1. Procesos organizacionales 32
2.4. Sistemas heredados 35

3. Sistemas crítico s 39
3.1. Un sistema de seguridad crítico sencillo 41
3.2. Confiabilidad de un sistema 43
3.3. Disponibilidad y Habilidad 46
3.4. Seguridad 50
3.5. Protección 53

4. Procesos del software 59
4.1. Modelos del proceso del software 60
4.1.1. El modelo en cascada 62
4.1.2. Desarrollo evolutivo 63
4.1.3. Ingeniería del software basada en componentes 64
4.2. Iteración de procesos 66
4.2.1. Entrega incrementa! 66
4.2.2. Desarrollo en espiral 68
4.3. Actividades del proceso 69
4.3.1. Especificación del software 69
4.3.2. Diseño e implementación del software 71
4.3.3. Validación del software 74
4.3.4. Evolución del software 75
4.4. El Proceso Unificado de Rational 76
4.5. Ingeniería del Software Asistida por computadora 79
4.5.1. Clasificación de CASE 79

5. Gestió n de proyectos 85
5.1. Actividades de gestión 87
5.2. Planificación del proyecto ' 88
5.2.1. El plan del proyecto 89
5.2.2. Hitos y entregas 90
5.3. Calendarización del proyecto 91
5.3.1. Gráficos de barras y redes de actividades 92
5.4. Gestión de riesgos 95
5.4.1. Identificación de riesgos 97
5.4.2. Análisis de riesgos 98
5.4.3. Planificación de riesgos 100
5.4.4. Supervisión de riesgos 100

6. Requerimientos del software 107
6.1. Requerimientos funcionales y no funcionales 109
6.1.1. Requerimientos funcionales 110
6.1.2. Requerimientos no funcionales • 111
6.1.3. Los requerimientos del dominio 115
6.2. Requerimientos del usuario 116
6.3. Requerimientos del sistema 118
6.3.1. Especificaciones en lenguaje estructurado 120
6.4. Especificación de la interfaz 122
6.5. El documento de requerimientos del software 123

7. Procesos de la ingenierí a de requerimientos 129
7.1. Estudios de viabilidad 131
7.2. Obtención y análisis de requerimientos 132
7.2.1. Descubrimiento de requerimientos 135
7.2.2. Etnografía 142
7.3. Validación de requerimientos 144
7.3.1. Revisiones de requerimientos 145
7.4. Gestión de requerimientos 146
7.4.1. Requerimientos duraderos y volátiles 147
7.4.2. Planificación de la gestión de requerimientos 147
7.4.3. Gestión del cambio de los requerimientos 150

8. Modelo s del sistema 153
8.1. Modelos de contexto 155
8.2. Modelos de comportamiento 156
8.2.1. Modelos de flujo de datos 157
8.2.2. Modelos de máquina de estados 159
8.3. Modelos de datos 161
8.4. Modelos de objetos 164
8.4.1. Modelos de herencia 165
8.4.2. Agregación de objetos 168
8.4.3. Modelado de comportamiento de objetos 169
8.5. Métodos estructurados 170

9. Especificació n de sistemas crítico s 175
9.1. Especificación dirigida por riesgos 177
9.1.1. Identificación de riesgos 178
9.1.2. Análisis y clasificación de riesgos 178
9.1.3. Descomposición de riesgos 181
9.1.4. Valoración de la reducción de riesgos 182
9.2. Especificación de la seguridad 183
9.3. Especificación de la protección 186
9.4. Especificación de la Habilidad del software 188
9.4.1. Métricas de Habilidad 189
9.4.2. Requerimientos de Habilidad no funcionales 191

10. Especificació n formal 197
10.1. Especificación formal en el proceso del software 199
10.2. Especificación de interfaces de subsistemas 202
10.3. Especificación del comportamiento 208

11. Diseño arquitectónico 219
11.1. Decisiones de diseño arquitectónico 222
11.2. Organización del sistema 224
11.2.1. El modelo de repositorio 225
11.2.2. El modelo cliente-servidor 226
11.2.3. Eí modelo de capas 227
11.3. Estilos de descomposición modular 229
11.3.1. Descomposición orientada a objetos 230
11.3.2. Descomposición orientada a flujos de funciones 231
11.4. Estilos de control 232
11.4.1. Control centralizado 233
11.4.2. Sistemas dirigidos por eventos 234
11.5. Arquitecturas de referencia 236

12. Arquitecturas de sistemas distribuidos 241
12.1. Arquitecturas multiprocesador 244
12.2. Arquitecturas cliente-servidor 245
22.3. Arquitecturas de objetos distribuidos 249
12.3.1. CORBA 252
12.4. Computación distribuida interorganizacional 256
12.4.1. Arquitecturas peer-to-peer 256
12.4.2. Arquitectura de sistemas orientados a servicios 258

13. Arquitecturas de aplicaciones 265
13.1. Sistemas de procesamiento de datos 268
13.2. Sistemas de procesamiento de transacciones 270
13.2.1. Sistemas de información y de gestión de recursos 272
13.3. Sistemas de procesamiento de eventos 276
13.4. Sistemas de procesamiento de lenguajes 279

14. Diseño orientado a objetos 285
14.1. Objetos y clases 288
14.1.1. Objetos concurrentes 290
14.2. Un proceso de diseño orientado a objetos 292
14.2.1. Contexto del sistema y modelos de utilización 294
14.2.2. Diseño de la arquitectura 296
14.2.3. Identificación de objetos 297
14.2.4. Modelos de diseño 299
14.2.5. Especificación de la interfaz de los objetos 303
14.3. Evolución del diseño 304

15. Diseñ o de software de tiempo real 309
15.1. Diseño del sistema 312
15.1.1. Modelado de sistemas de tiempo real 314
15.2. Sistemas operativos de tiempo real 315
15.2.1. Gestión de procesos 316
15.3. Sistemas de monitorización y control 318
15.4. Sistemas de adquisición de datos 323

16. Diseño de interfaces de usuario 331
16.1. Asuntos de diseño 335
16.1.1. Interacción del usuario 335
16.1.2. Presentación de la información 338
16.2. El proceso de diseño de la interfaz de usuario 344
16.3. Análisis del usuario 345
16.3.1. Técnicas de análisis 346
16.4. Prototipado de la interfaz de usuario 348
16.5. Evaluación de la interfaz 350

17. Desarrollo 357
17.1. Métodos ágiles 361
17.2. Programación extrema 364
17.2.1. Pruebas en XP 366
17.2.2. Programación en parejas 369
17.3. Desarrollo rápido de aplicaciones 370
17.4. Prototipado del software 373

18. Reutilizació n del software 379
18.1. El campo de la reutilización 382
18.2. Patrones de diseño 384
18.3. Reutilización basada en generadores 387
18.4. Marcos de trabajo de aplicaciones 389
18.5. Reutilización de sistemas de aplicaciones 391
18.5.1. Reutilización de productos COTS 391
18.5.2. Líneas de productos software 394

19. Ingenierí a del software basada en componentes 401
19.1. Componentes y modelos de componentes 404
19.1.1. Modelos de componentes 407
19.1.2. Desarrollo de componentes para reutilización 409
19.2. El proceso CBSE 411
19.3. Composición de componentes 414

20. Desarrollo de sistemas crítico s 423
20.1. Procesos confiables 427
20.2. Programación confiable 428
20.2.1. Información protegida 428
20.2.2. Programación segura 430
20.2.3. Manejo de excepciones 432
20.3. Tolerancia a defectos 435
20.3.1. Detección de defectos y evaluación de daños 435
20.3.2. Recuperación y reparación de defectos 440
20.4. Arquitecturas tolerantes a defectos 441

21. Evolució n del software 447
21.1. Dinámica de evolución de los programas 449
21.2. Mantenimiento del software 451
21.2.1. Predicción del mantenimiento 454
21.3. Procesos de evolución 456
21.3.1. Reingeniería de sistemas 459
21.4. Evolución de sistemas heredados 461

22. Verificació n y validació n 471
22.1. Planificación de la verificación y validación 475
22.2. Inspecciones de software 477
22.2.1. El proceso de inspección de programas 478
22.3. Análisis estático automatizado 482
22.4. Verificación y métodos formales 485
22.4.1. Desarrollo de software de Sala Limpia 486

23. Pruebas del software 491
23.1. Pruebas del sistema 494
23.1.1. Pruebas de integración 495
23.1.2. Pruebas de entregas 497
23.1.3. Pruebas de rendimiento 500
23.2. Pruebas de componentes 501
23.2.1. Pruebas de interfaces 502
23.3. Diseño de casos de prueba 504
23.3.1. Pruebas basadas en requerimientos 505
23.3.2. Pruebas de particiones 506
23.3.3. Pruebas estructurales 509
23.3.4. Pruebas de caminos 511
23.4. Automatización de las pruebas 513

24. Validació n de sistemas crítico s 519
24.1. Validación de la fiabilidad 521
24.1.1. Perfiles operacionales 522
24.1.2. Predicción de la fiabilidad 523
24.2. Garantía de la seguridad 526
24.2.1. Argumentos de segundad 527
24.2.2. Garantía del proceso 530
24.2.3. Comprobaciones de seguridad en tiempo de ejecución 531
24.3. Valoración de la protección 532
24.4. Argumentos de confiabilidad y de seguridad 534

25. Gestió n de personal 543
25.1. Selección de personal 544
25.2. Motivación 547
25.3. Gestionando grupos 550
25.3.1. La composición del grupo 551
25.3.2. Cohesión 552
25.3.3. Las comunicaciones del grupo 554
25.3.4. La organización del grupo 555
25.3.5. Entornos de trabajo 556
25.4. El Modelo de Madurez de la Capacidad del Personal 558

26. Estimació n de costes del software 561
26.1. Productividad 563
26.2. Técnicas de estimación 567
26.3. Modelado algorítmico de costes 570
26.3.1. El modelo de COCOMO 572
26.3.2. Modelos algorítmicos de costes en la planificación 580
26.4. Duración y personal del proyecto 582

27. Gestió n de calida d 587
27.1. Calidad de proceso y producto 589
27.2. Garantía de la calidad y estándares 591
27.2.1. ISO 9000 593
27.2.2. Estándares de documentación 594
27.3. Planificación de la calidad 596
27.4. Control de la calidad 597
27.4.1. Revisiones de la calidad 597
27.5. Medición y métricas del software 598
27.5.1. El proceso de medición 601
27.5.2. Métricas de producto 602
27.5.3. Análisis de las mediciones 604

28. Mejor a de procesos 626
28.1. Calidad de producto y de proceso 609
28.2. Clasificación de los procesos 611
28.3. Medición del proceso 613
28.4. Análisis y modelado de procesos 614
28.4.1. Excepciones del proceso 618
28.5. Cambio en los procesos 618
28.6. El marco de trabajo para la mejora de procesos CMM I 619
28.6.1. El modelo CMM I en etapas 623
28.6.2. El modelo CMM I continuo 624

29. Gestió n de configuraciones 627
29.1. Planificación de la gestión de configuraciones 630
29.1.1. Identificación de los elementos de configuración 630
29.1.2. La base de datos de configuraciones 632
29.2. Gestión del cambio 633
29.3. Gestión de versiones y entregas 636
29.3.1. Identificación de versiones 636
29.3.2. Gestión de entregas 639
29.4. Construcción del sistema 641
29.5. Herramientas CAS E para gestión de configuraciones 642
29.5.1. Apoyo a la gestión de cambios 643
29.5.2. Soporte para gestión de versiones 643
29.5.3. Apoyo a la construcción del sistema 644

Glosario 649
Bibliografí a 661
índic e alfabétic o 677
